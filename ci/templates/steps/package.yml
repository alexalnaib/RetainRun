parameters:
  path: ""
  endpointName: ""
  publisherId: ""
  extensionId: ""
  extensionName: ""
  contents: ""
  publish: false

steps:
- task: TfxInstaller@3
  displayName: Install Node CLI

- task: CopyFiles@2
  displayName: Copy extension
  inputs:
    contents: ${{ parameters.contents }}
    targetFolder: ${{ parameters.path }}

- task: DownloadPipelineArtifact@2
  displayName: Copy tasks
  inputs:
    source: current
    path: ${{ parameters.path }}/task

- task: QueryAzureDevOpsExtensionVersion@3
  displayName: Query extension version
  inputs:
    connectTo: VsTeam
    connectedServiceName: ${{ parameters.endpointName }}
    publisherId: ${{ parameters.publisherId }}
    extensionId: ${{ parameters.extensionId }}
    versionAction: Patch
    outputVariable: Task.Extension.Version

- task: PackageAzureDevOpsExtension@3
  displayName: Package extension
  inputs:
    rootFolder: ${{ parameters.path }}
    publisherId: ${{ parameters.publisherId }}
    extensionId: ${{ parameters.extensionId }}
    extensionName: ${{ parameters.extensionName }}
    extensionVersion: $(Task.Extension.Version)
    updateTasksVersion: true
    updateTasksVersionType: patch
    outputVariable: extensionPath

- ${{ if eq(parameters.publish, true) }}:
  - publish: $(extensionPath)
    displayName: Publish artifact
    artifact: Extension
